<script src="https://js.stripe.com/v3/"></script>
<div id="payment-element"></div>
<script defer>
const stripe = Stripe('<%= PUBLIC_KEY_STRIPE %>');

let elements;

initialize();
checkStatus();
document.querySelector('#payment-form').addEventListener('submit', handleSubmit);

function initialize() {
  const clientSecret = '<%= @client_secret %>';

  const appearance = {
    theme: 'stripe',
  };
  elements = stripe.elements({ appearance, clientSecret });

  const paymentElementOptions = {
    layout: 'tabs',
  };
  const paymentElement = elements.create('payment', paymentElementOptions);
  paymentElement.mount('#payment-element');
}

async function handleSubmit(e) {
  e.preventDefault();
  setLoading(true);

  const { error } = await stripe.confirmPayment({
    elements,
    confirmParams: {
      return_url: window.location.href,
    },
  });

  if (error.type === 'card_error' || error.type === 'validation_error') {
    showMessage(error.message);
  } else {
    showMessage('<%= t('crowdfunding.pay.error.payment_failed') %>');
  }

  setLoading(false);
}

async function checkStatus() {
  const clientSecret = new URLSearchParams(window.location.search).get(
    'payment_intent_client_secret'
  );

  if (!clientSecret) {
    return;
  }

  const { paymentIntent } = await stripe.retrievePaymentIntent(clientSecret);

  switch (paymentIntent.status) {
    case 'succeeded':
    case 'processing':
      break;
    case 'requires_payment_method':
    default:
      showMessage('<%= t('crowdfunding.pay.error.payment_failed') %>');
      break;
  }
}

function showMessage(messageText) {
  const messageContainer = document.querySelector('#payment-message');
  messageContainer.classList.remove('d-none');
  messageContainer.textContent = messageText;
}

function setLoading(isLoading) {
  document.querySelector('#submit').disabled = isLoading;
}
</script>
